# LOG of process to turn Kanute into an R package.

# TODO:-
# TODO: documentation  - roxygen2 format
# TODO: structure
# TODO: examples
# TODO: example data, test data
# TODO: vignette
# TODO: add function to create a testing folder with primitive examples (ls, cat, print)
# DONE: transfer hosting to github to make public.
# DONE: Test that can be installed from Github.  install_github(repo="davetgerrard/kanute")
# TODO: Write function(s) to output test results as html/markdown with links to test files and result files. Tabulate as 1/0 or TRUE/FALSE?

# May attempt to use devtools. https://github.com/hadley/devtools

# How to start?
#http://stackoverflow.com/questions/17521300/start-new-r-package-development-on-github


# Installed Rtools on windows machine
http://cran.r-project.org/bin/windows/Rtools/
# installed Rtools 3.1 as important to match with R version (3.1.1)


# tried out devtools::create()    very similar to package skeleton, but create() does 'create' man/ directory or Rd files from the current environ.
# Additionally, create() adds a package.Rproj file for Rstudio and a git.ignore file (.Rproj, .Rdata, .Rhistory).
# so basic package structure requires named folder 'kanute' with R/ sub-dir.
# at top level NAMESPACE and DESCRIPTION files.



# Changed over to GitHub for public hosting.  Used Githubs import tool, supplying URL or Bitbucket repo.

# then in each instance (PC and on compute cluster), changed remote thus
git remote set-url origin https://github.com/davetgerrard/kanute.git

# on Compute cluster I didn't have email or user.name set. I played around with these and managed to break the .git so that I could no longer upload. 
# In the end I removed the repository: rm -rF kanute/
# then clone it anew
git clone https://github.com/davetgerrard/kanute.git

#http://stackoverflow.com/questions/5813726/troubleshooting-git-push-it-asks-for-a-user-pass
#git remote set-url origin git@github.com:abc/xyz.git
git remote set-url origin git@github.com:davetgerrard/kanute.git

# AT THIS POINT,  Even before adding any code, the repository can be installed as an R package!

# I then put some functions as bare R code in the R/ sub-dir. When I run install_github(repo="davetgerrard/kanute") again, these functions are now available, but with no documentation.

# Next added some Roxygen2 documentation to the functions. Created man/ folder and .Rd files automatically using devtools:::document()
# and again tested install. Works and shows documentation for individual functions.


# individual help pages currently work, but links between them do not. TOOD check roxygen2 documentation.
# TODO fix this


# How to include an example set of tests?  Maybe simplest as a url?
# http://cran.r-project.org/doc/manuals/R-exts.html#Data-in-packages    <- NOT THIS



# Realised that md5sum (used to check output of tests) would not be portable.  Altered compileTestResults to use digest() from digest package to generate md5.
# This introduced dependency on digest package. Added ChangeLog to reflect these changes.


# To be useful, need well presented reporting of version comparisons.
# If initial users are software admins and expert users, an html page on a server would work pretty well.
# So, want to output test results as tables in html/markdown. Can use knitr::kable(). 
# To link to test files wrote createTestLinks() and an auxillary function convertLinkToRelative().